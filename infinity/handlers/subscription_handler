package handlers

import (
	"fmt"
	"net/http"
	"context"
	"encoding/json"
	"time"
	"infinity/database"
	"infinity/models"
	"github.com/gorilla/mux"
)

// view all subscriptions
func getAllSubscriptionsHandler(w http.ResponseWriter, r *http.Request) {
	// Set response header
	w.Header().Set("Content-Type", "application/json")

	// Create a new database connection
	db, err := database.Connectdb()
	if err != nil {
		http.Error(w, fmt.Sprintf("Error connecting to database: %v", err), http.StatusInternalServerError)
		return
	}
	defer db.Close()

	// Query the partners table
	rows, err := db.Query("SELECT id, name, email, phone_number, billing_address, created_at, updated_at FROM partners")
	if err != nil {
		http.Error(w, fmt.Sprintf("Error querying database: %v", err), http.StatusInternalServerError)
		return
	}
	defer rows.Close()

	// Build an array of Partner objects
	var partners []models.Partner
	for rows.Next() {
		var partner models.Partner
		err := rows.Scan(&partner.ID, &partner.Name, &partner.Email, &partner.PhoneNumber, &partner.BillingAddress, &partner.CreatedAt, &partner.UpdatedAt)
		if err != nil {
			http.Error(w, fmt.Sprintf("Error scanning row: %v", err), http.StatusInternalServerError)
			return
		}
		partners = append(partners, partner)
	}

	// Encode the array of Partner objects in JSON format and write it to the response
	if err := json.NewEncoder(w).Encode(partners); err != nil {
		http.Error(w, fmt.Sprintf("Error encoding JSON: %v", err), http.StatusInternalServerError)
		return
	}
}